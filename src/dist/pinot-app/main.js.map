{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/arc-gis/arc-gis.component.ts","./src/app/arc-gis/arc-gis.component.html","./src/app/arc-gis/show-arc-gis/show-arc-gis/show-arc-gis.component.ts","./src/app/arc-gis/show-arc-gis/show-arc-gis/show-arc-gis.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dataset/dataset.component.ts","./src/app/dataset/dataset.component.html","./src/app/download/download.component.ts","./src/app/download/download.component.html","./src/app/info/info/info.component.ts","./src/app/info/info/info.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/metadata/add-metadata/add-metadata.component.ts","./src/app/metadata/add-metadata/add-metadata.component.html","./src/app/metadata/edit-metadata/edit-metadata.component.ts","./src/app/metadata/edit-metadata/edit-metadata.component.html","./src/app/metadata/metadata.component.ts","./src/app/metadata/metadata.component.html","./src/app/metadata/show-metadata/show-metadata.component.ts","./src/app/metadata/show-metadata/show-metadata.component.html","./src/app/ml/ml.component.ts","./src/app/ml/ml.component.html","./src/app/physical/add-physical/add-physical.component.ts","./src/app/physical/add-physical/add-physical.component.html","./src/app/physical/edit-physical/edit-physical.component.ts","./src/app/physical/edit-physical/edit-physical.component.html","./src/app/physical/physical.component.ts","./src/app/physical/physical.component.html","./src/app/physical/show-physical/show-physical.component.ts","./src/app/physical/show-physical/show-physical.component.html","./src/app/services/service.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {ArcGisComponent} from './arc-gis/arc-gis.component'\r\nimport { DatasetComponent } from './dataset/dataset.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InfoComponent } from './info/info/info.component';\r\nimport { MlComponent } from './ml/ml.component';\r\n\r\nconst routes: Routes = [\r\n  //{ path: '',component: DashboardComponent },\r\n  { path: '',component: MlComponent },\r\n  { path: 'ml',component: MlComponent },\r\n  { path: 'dashboard',component: DashboardComponent },\r\n //{path: 'login',component: LoginComponent},\r\n  { path: 'ArcGis',component: ArcGisComponent },\r\n  { path: 'DataSet',component: DatasetComponent },\r\n  { path: 'Info',component: InfoComponent },\r\n  { path: 'login',component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, computed, signal } from '@angular/core';\r\nexport type MenuItem = {\r\n  icon: string;\r\n  label: string;\r\n  route: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'PinotApp';\r\n  grape = \"assets/img/grape.png\";\r\n\r\n  signedIn = true;\r\n  User = \"\";\r\n\r\n  public loading = true;\r\n\r\n  menuItems = signal<MenuItem[]>([\r\n    {\r\n      icon: 'hub',\r\n      label: 'Predicting model',\r\n      route: 'ml',\r\n    },\r\n    {\r\n      icon: 'dashboard',\r\n      label: 'Dashboard',\r\n      route: 'dashboard',\r\n    },\r\n    {\r\n      icon: 'language',\r\n      label: 'ArcGIS',\r\n      route: 'ArcGis',\r\n    },\r\n    {\r\n      icon: 'dataset',\r\n      label: 'Data and download',\r\n      route: 'DataSet',\r\n    },\r\n    {\r\n      icon: 'photo_library',\r\n      label: 'Information',\r\n      route: 'Info',\r\n    },\r\n    {\r\n      icon: 'assignment_ind',\r\n      label: 'Sign in',\r\n      route: 'login',\r\n    }\r\n  ]);\r\n\r\n  collapsed = signal(true);\r\n  sidenavWidth = computed(() => this.collapsed() ? '65px': '250px')\r\n  profilePicSize = computed(()=> this.collapsed()? '30': '100')\r\n\r\n  ngOnInit () {\r\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\r\n      this.signedIn = false;\r\n    }\r\n    else{\r\n      this.signedIn = true;\r\n      this.User = localStorage.getItem('session')?.substring(0,4)+\".\";\r\n    }\r\n  }\r\n}\r\n","<mat-toolbar class=\"mat-elevation-z3\">\r\n  <button mat-icon-button (click)=\"collapsed.set(!collapsed())\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <div class=\"header-text\" [class.hide-header-text]=\"!collapsed()\">\r\n    <h1>Wine quality prediction</h1>\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n  <mat-sidenav opened mode=\"side\" [style.width]=\"sidenavWidth()\">\r\n    <div class=\"sidenav-header\"> \r\n      <img width=\"profilePicSize()\" [height]=\"profilePicSize()\" [src] =\"grape\">\r\n    </div>\r\n    <div class=\"header-text\" [class.hide-header-text]=\"collapsed()\">\r\n      <h2>Wine quality prediction</h2>\r\n      <p>C-fACS, Licoln University</p>\r\n    </div>\r\n    <mat-nav-list>\r\n      <a mat-list-item \r\n          class=\"menu-item\"\r\n          *ngFor=\"let item of menuItems()\" \r\n          [routerLink]=\"item.route\" \r\n          routerLinkActive = \"selected-menu-item\"\r\n          #rla=\"routerLinkActive\" \r\n          [activated]=\"rla.isActive\">\r\n        <mat-icon matListItemIcon matTooltip={{item.label}}>{{item.icon}}</mat-icon>\r\n        <span matListItemTitle *ngIf=\"!collapsed()\">{{item.label}}</span>\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content [style.margin-left]=\"sidenavWidth()\">\r\n  <div class=\"content\"> \r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatCardModule} from '@angular/material/card';\r\nimport { MatRadioModule} from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nimport { MetadataComponent } from './metadata/metadata.component';\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AddMetadataComponent } from './metadata/add-metadata/add-metadata.component';\r\n\r\nimport { ShowMetadataComponent } from './metadata/show-metadata/show-metadata.component';\r\nimport { EditMetadataComponent } from './metadata/edit-metadata/edit-metadata.component';\r\nimport { ArcGisComponent } from './arc-gis/arc-gis.component';\r\nimport { PhysicalComponent } from './physical/physical.component';\r\nimport { AddPhysicalComponent } from './physical/add-physical/add-physical.component';\r\nimport { EditPhysicalComponent } from './physical/edit-physical/edit-physical.component';\r\nimport { ShowPhysicalComponent } from './physical/show-physical/show-physical.component';\r\nimport { DatasetComponent } from './dataset/dataset.component';\r\nimport { DownloadComponent } from './download/download.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InfoComponent } from './info/info/info.component';\r\nimport { ShowArcGisComponent } from './arc-gis/show-arc-gis/show-arc-gis/show-arc-gis.component';\r\nimport { MlComponent } from './ml/ml.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddMetadataComponent,\r\n    MetadataComponent,\r\n    ShowMetadataComponent,\r\n    EditMetadataComponent,\r\n    PhysicalComponent,\r\n    AddPhysicalComponent,\r\n    EditPhysicalComponent,\r\n    ShowPhysicalComponent,\r\n    DatasetComponent,\r\n    DownloadComponent,\r\n    LoginComponent,\r\n    ArcGisComponent,\r\n    InfoComponent,\r\n    ShowArcGisComponent,\r\n    MlComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,   \r\n    FormsModule,\r\n    HighchartsChartModule,\r\n\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatTooltipModule,\r\n     \r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatSliderModule,\r\n    MatProgressSpinnerModule,\r\n\r\n    \r\n  ],\r\n  exports: [\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n  ],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ServiceService } from '../services/service.service';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ShowArcGisComponent } from './show-arc-gis/show-arc-gis/show-arc-gis.component';\nimport { MatDialog } from '@angular/material/dialog';\n// import * as L from 'leaflet';\n\n@Component({\n  selector: 'app-arc-gis',\n  templateUrl: './arc-gis.component.html',\n  styleUrls: ['./arc-gis.component.css']\n})\nexport class ArcGisComponent {\n\n  readonly APIkey = 'edf8fdb7896c4081bf79b2c831a5758e';\n  toggle = new FormControl('toggle');\n  toggleLabel = new FormControl('Show GIS selector');\n  selectedGIS = new FormControl();\n\n  Producers: any = [];\n  dataSource! :  MatTableDataSource<any>;\n  \n\n  constructor(private service: ServiceService, private dialog: MatDialog) { } \n\n  onChange() {\n    if(this.toggleLabel.value == 'Show filter') {\n       this.toggleLabel.setValue('Hide filter');\n    }\n    else{\n       this.toggleLabel.setValue('Show filter');\n    }\n  }\n  \n  onChangeGIS(){\n    var region: string = this.selectedGIS.value;\n    if (region != \"All\"){\n      this.genMap(region);\n      console.log(region);\n    }\n    else{\n      this.genMap(\"All\");\n      console.log(region);\n    }\n  }\n\n  private genMap(str: string): void {\n\n    if (str == \"All\"){\n      this.service.getMetadata().subscribe(data=>{\n        this.Producers = data;\n        this.dataSource = new MatTableDataSource(data);\n      });\n    }\n    else{\n      this.service.gerMetadataBProduction(str).subscribe(data=>{\n        this.Producers = data;\n      });\n      \n    }\n  }\n\n  ngOnInit(): void{\n    this.genMap(\"All\");\n  }\n\n  onDetail(producer: string, vinyard: string): void{\n    for (var p of this.Producers){\n      if (p.Producer === producer && p.Vineyard ===vinyard){\n          this.dialog.open(ShowArcGisComponent, {\n            height: '90%',\n            width: '60%',\n            data: p\n          });\n\n        }\n    }\n  }\n}\n","<mat-slide-toggle (click)=\"drawer.toggle()\" [formControl] = \"toggle\" (change)=\"onChange()\" value=\"false\">\n    <mat-label [formControl] = \"toggleLabel\">{{toggleLabel.value}}</mat-label>\n</mat-slide-toggle>\n\n<mat-drawer-container [hasBackdrop]=\"false\">\n    <mat-drawer #drawer mode=\"side\" opened>\n        <tr>\n          <mat-form-field>\n              <mat-label>Production</mat-label>\n              <mat-select [formControl]=\"selectedGIS\" (selectionChange) = \"onChangeGIS()\">\n                <mat-option value=\"All\">All</mat-option>\n                <mat-option value=\"High\">High</mat-option>\n                <mat-option value=\"Low\">Low</mat-option>\n              </mat-select>\n          </mat-form-field>\n        </tr>\n    </mat-drawer>\n    <div class=\"container\">\n    <mat-card class = \"card\" *ngFor =\"let producer of Producers\">\n        <mat-card-header>\n                <div><mat-card-title><th>{{producer.Vineyard}}<th></mat-card-title></div>\n        </mat-card-header>\n        <mat-card-content> {{producer.Region}},  {{producer.Producer}},\n            <button mat-button color=\"primary\" (click) = \"onDetail(producer.Producer,producer.Vineyard)\">details</button>\n            <!-- <a mat-menu-item (click) = \"onDetail()\" color=\"primary\">Detail</a> -->\n        </mat-card-content>\n        <mat-card-content>\n            <img  class=\"map-frame\" [src] =\"producer.Layer_ID1\" style=\"width: 300px;height: 200px;\"> \n        </mat-card-content>\n    </mat-card>\n    </div>\n</mat-drawer-container>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Metadata } from 'src/app/models/metadata';\n\n@Component({\n  selector: 'app-show-arc-gis',\n  templateUrl: './show-arc-gis.component.html',\n  styleUrls: ['./show-arc-gis.component.css']\n})\nexport class ShowArcGisComponent {\n\n  title = 'Details of GIS';\n\n  constructor(public dialogRef: MatDialogRef<ShowArcGisComponent>,  @Inject(MAT_DIALOG_DATA) public dataForView: any){}\n\n  MetadataDetails: Metadata = {\n    ID: '',\n    Producer_Abbrev: '',\n    Producer: '',\n    Vineyard: '',\n    Vintage: '',\n    Region: '',\n    Cost: 0,\n    Uses: '',\n    Closure: '',\n    Harvest: '',\n    Yield: '',\n    Production: '',\n    Viticulture: '',\n    Quality: 0,\n    Layer_ID: '',\n    Layer_ID1: '',\n    DIV:0\n  };\n\n  ngOnInit(): void{\n    this.MetadataDetails = this.dataForView;\n  }\n\n}\n","<div>\n<mat-dialog-content>\n    <form class=\"gis-form\" #form=\"ngForm\">\n        <h1><th>{{title}}</th></h1>\n        <mat-label>Producer ID: <b>{{MetadataDetails.ID}}</b></mat-label>\n        <mat-label>Closure: <b>{{MetadataDetails.Closure}}</b></mat-label>\n        <mat-label>Cost: <b>{{MetadataDetails.Cost}}</b></mat-label>\n        <div>Producer abbreviation: <b>{{MetadataDetails.Producer_Abbrev}}</b></div>\n        <br>\n        <div><b>{{MetadataDetails.Producer}} </b>owned the <b>{{MetadataDetails.Vineyard}}</b> vinyard.\n        This wine is <b>{{MetadataDetails.Uses}}</b> quality, produced in <b>{{MetadataDetails.Vintage}}</b>, with <b>{{MetadataDetails.Harvest}}</b> harvesting and <b>{{MetadataDetails.Yield}}</b> yield. The production is quite <b>{{MetadataDetails.Production}}</b> about \n        <b>{{MetadataDetails.Quality}}</b> quality score, by <b>{{MetadataDetails.Viticulture}}</b> viticulture.</div>\n        <br>\n        <div><th><img  [src] =\"MetadataDetails.Layer_ID1\" style=\"width: 700px;height: 500px;\"></th></div>\n    </form>\n</mat-dialog-content>\n</div>","import { Component} from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {ServiceService} from 'src/app/services/service.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\n\nexport class DashboardComponent {\n   \n   qualitychart: typeof Highcharts = Highcharts;  \n   costChart: typeof Highcharts = Highcharts;\n   colorchart: typeof Highcharts = Highcharts;\n   QPC_chart: typeof Highcharts = Highcharts;\n\n\n   quality_chartOptions: any;\n   cost_chartOptions: any;\n   color_chartOptions: any;\n   qpc_chartOptions: any;\n\n   producers:any=[];\n\n   toggle = new FormControl('toggle');\n   toggleLabel = new FormControl('Show parameters');\n\n   selectedQ = new FormControl('');\n   selectedC = new FormControl('');\n   selecteP = new FormControl('');\n   // selecteProcedure: MetadataList = {\n   //    ID : '',\n   //    Vineyard :  ''\n   // };\n   //selectedViticulture = new FormControl('');\n\n\n   constructor(private service: ServiceService) {   }\n\n   onChange() {\n      if(this.toggleLabel.value == 'Show parameters') {\n         this.toggleLabel.setValue('Hide parameters');\n      }\n      else{\n         this.toggleLabel.setValue('Show parameters');\n      }\n   }\n\n   onChangeQuality() {\n      var PD: any = this.selectedQ.value;\n      if (PD != \"Qualities\")\n      {\n         this.service.getForGraph(PD).subscribe(dt=> {\n            var qData = dt.map((item, index) => ( {\n               name: [item.Vineyard],\n               data: [item.Quality/item.DIV]\n            }));\n            this.QualityChart(qData,\"Qualities based on \"+PD);\n         })\n      }\n      else\n      {\n         this.retrieveData(\"Qualities\");\n      }\n   }\n\n   onChangeCost() {\n      var CD: any = this.selectedC.value;\n      if (CD != \"Costs\")\n      {\n         this.service.getForGraph(CD).subscribe(dt=>{\n            var cData = dt.map((item, index) => ({\n               name: [item.Vineyard],\n               data: [item.Cost/item.DIV]\n            }));\n            this.CostChart(cData,\"Costs based on \"+CD);\n            })\n      }\n      else\n      {\n         this.retrieveData(\"Costs\");\n      }\n   }\n   \n   onChangeColor() {\n      var Pro: any = this.selecteP.value;\n      this.retrieveDataColor(Pro);\n   }\n\n   ngOnInit(): void{\n      this.retrieveProducerList();\n      this.retrieveData(\"init\");\n      this.retrieveDataColor(\"init\");\n   }\n   retrieveProducerList(){\n      this.service.getMetadata().subscribe(dt=>{\n         this.producers = dt;\n      });\n\n\n   }\n\n   retrieveData(sh: String) {\n         this.service.getMetadata().subscribe(dt=>{\n            var qData = dt.map((item, index) => ({\n               name: [item.Vineyard],\n               data: [item.Quality]\n            }));\n            var cData = dt.map((item, index) => ({\n               name: [item.Vineyard],\n               data: [item.Cost]\n            }));\n            var qpcData = dt.map((item, index) => ({\n               name: [item.Vineyard],\n               data: [item.Quality/item.Cost]\n            }));\n\n\n            if(sh == \"init\"){\n               this.QualityChart(qData,\"Qualities\");\n               this.CostChart(cData,\"Costs\");\n               this.QPCChart(qpcData);\n            }\n            else if (sh == \"Qualities\"){\n               this.QualityChart(qData,\"Qualities\");\n            }\n            else if (sh == \"Costs\"){\n               this.CostChart(cData,\"Costs\");\n            }\n         });\n   }\n   \n   retrieveDataColor(sh: string)\n   {\n      var ID: string\n      if(sh == \"init\"){\n         ID = \"2013G_2018\";\n      }\n      else{\n         ID = sh;\n      }\n      this.service.getColorList(ID).subscribe(dt=>{\n         var colorData = dt.map((item)=> ({\n            name: [item.Vineyard],\n            data: [['Yellow',item.Yellow],['Red',item.Red],['Blue',item.Blue]],\n            colors: [\"#F9E79F\",\"#CD6155\",\"#2980B9\"]\n         }));\n         this.ColorChart(colorData, dt[0].Vineyard);\n      });\n   }\n\n   public QualityChart(dt: any, str: String){\n\n      this.quality_chartOptions = \n      {\n         chart: { type: 'column'},\n         title: { text: 'Wind Qualities'},\n         //subtitle:{ text: 'Keep on working'},\n         accessibility: {\n            announceNewData: {\n                enabled: true\n            }\n         },\n         xAxis: { categories:\n              [\n                str         \n              ]},\n         series: dt\n      }\n   }\n   public CostChart(t: any, str: String){\n      this.cost_chartOptions = \n      {\n         chart: { type: 'column'},\n         title: { text: 'Costs'},\n         //subtitle:{ text: 'Keep on working'},\n         accessibility: {\n            announceNewData: {\n                enabled: true\n            }\n         },\n         xAxis: { categories:\n              [\n                  str         \n              ]},\n         series: t\n      }\n   }\n   public ColorChart(t:any, str: String){\n      this.color_chartOptions = \n      {\n         chart: { type: 'pie'},\n         title: { text: 'Berry colors'},\n         subtitle:{ text: str},\n         accessibility: {\n            announceNewData: {\n                enabled: true\n            }\n         },\n         series: t\n      }\n   }\n   public QPCChart(t: any){\n      this.qpc_chartOptions = \n      {\n         chart: { type: 'bar'},\n         title: { text: 'Quality/Cost'},\n         //subtitle:{ text: 'Keep on working'},\n         accessibility: {\n            announceNewData: {\n                enabled: true\n            }\n         },\n         xAxis: { categories:\n              [\n                'Quality/Cost'  \n              ]},\n         series: t\n      }\n   }\n\n}\n","<mat-slide-toggle (click)=\"drawer.toggle()\" [formControl] = \"toggle\" (change)=\"onChange()\" value=\"false\">\r\n    <mat-label [formControl] = \"toggleLabel\">{{toggleLabel.value}}</mat-label>\r\n</mat-slide-toggle>\r\n  \r\n  <mat-drawer-container #containerChart id = \"containerChart\" class=\"container\" [hasBackdrop]=\"false\">\r\n    <mat-drawer #drawer mode=\"side\" opened>\r\n      <tr>\r\n        <mat-form-field>\r\n            <mat-label>Quality chart</mat-label>\r\n            <mat-select [formControl]=\"selectedQ\" (selectionChange) = \"onChangeQuality()\" id=\"idQ\">\r\n              <mat-option value=\"Qualities\">Qualities</mat-option>\r\n              <mat-option value=\"Ethyl_butanoate\">Qualities - Ethyl</mat-option>\r\n              <mat-option value=\"Butanoic_acid\">Qualities - Butanoic</mat-option>\r\n              <mat-option value=\"Hexanoic_acid\">Qualities - Hexanoic</mat-option>\r\n              <mat-option value=\"Octanoic_acid\">Qualities - Octanoic</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n      </tr>\r\n      <tr>\r\n        <mat-form-field>\r\n            <mat-label>Cost chart</mat-label>\r\n            <mat-select [formControl]=\"selectedC\" (selectionChange) = \"onChangeCost()\" id=\"idC\">\r\n              <mat-option value=\"Costs\">Cost</mat-option>\r\n              <mat-option value=\"Ethyl_butanoate\">Costs - Ethyl</mat-option>\r\n              <mat-option value=\"Butanoic_acid\">Costs - Butanoic</mat-option>\r\n              <mat-option value=\"Hexanoic_acid\">Costs - Hexanoic</mat-option>\r\n              <mat-option value=\"Octanoic_acid\">Costs - Octanoic</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n      </tr>\r\n      <tr>\r\n        <mat-form-field>\r\n            <mat-label>Color chart</mat-label>\r\n            <mat-select [formControl]=\"selecteP\" (selectionChange) = \"onChangeColor()\">\r\n              <mat-option *ngFor=\"let producer of producers\" [value] = \"producer.ID\">{{producer.Vineyard}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n      </tr>\r\n    </mat-drawer>\r\n      <tr>\r\n      <td>\r\n      <highcharts-chart\r\n        [Highcharts] = \"qualitychart\" \r\n        [options]=\"quality_chartOptions\"\r\n        style=\"width: 100%; height: 400px; display: block;\">       \r\n      </highcharts-chart>\r\n      </td>\r\n      <td>\r\n      <highcharts-chart\r\n        [Highcharts] = \"costChart\" \r\n        [options]=\"cost_chartOptions\"\r\n        style=\"width: 100%; height: 400px; display: block;\">       \r\n      </highcharts-chart>\r\n      </td>\r\n      </tr>\r\n      <tr>\r\n      <td>\r\n          <highcharts-chart\r\n          [Highcharts] = \"colorchart\" \r\n          [options]=\"color_chartOptions\"\r\n          style='width: 100%; height: 400px; display: block;'>       \r\n        </highcharts-chart>\r\n      </td>\r\n      <td>\r\n      <highcharts-chart\r\n        [Highcharts] = \"QPC_chart\" \r\n        [options]=\"qpc_chartOptions\"\r\n        style='width: 100%; height: 400px; display: block;'>       \r\n      </highcharts-chart>\r\n      </td>\r\n      </tr>\r\n  </mat-drawer-container>\r\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dataset',\n  templateUrl: './dataset.component.html',\n  styleUrls: ['./dataset.component.css']\n})\nexport class DatasetComponent {\n\n}\n","<mat-tab-group color=\"accent\">\n    <mat-tab label=\"Metadata\"> <app-metadata></app-metadata> </mat-tab>\n    <mat-tab label=\"Physical data\"> <app-physical></app-physical>  </mat-tab>\n    <mat-tab label=\"Download\"><app-download></app-download></mat-tab>\n  </mat-tab-group>\n","import { Component } from '@angular/core';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { ServiceService } from '../services/service.service';\nimport { FileSaverService } from 'ngx-filesaver';\nimport * as XLSX from 'xlsx'\n\n\n\nexport interface elementData {\n  Position: number;\n  Dataset: string;\n  Description: string;\n}\n@Component({\n  selector: 'app-download',\n  templateUrl: './download.component.html',\n  styleUrls: ['./download.component.css']\n})\n\n\nexport class DownloadComponent {\n\n\n  displayedColumns: string[] = ['Position', 'Dataset', 'Description', 'Options'];\n  dataSource!: MatTableDataSource<any>;\n  dataSource1!: MatTableDataSource<any>;\n  constructor(private service: ServiceService, private fileSaver: FileSaverService) {}\n\n  element_Data: elementData[] = [\n    {Position: 1, Dataset: 'Metadata', Description: 'This data is detailed on harvesting, producers and etc.'},\n    {Position: 2, Dataset: 'Physical_Data', Description: 'This data is detailed on physical properties of the berry.'},\n    {Position: 3, Dataset: 'AromaLincoln', Description: 'This data is detailed on the aroma of 18 bottles of wine, from different regions.'},\n    {Position: 4, Dataset: 'Berry_OD', Description: 'This data contains the berry OD, based on different chemical characters'},\n    {Position: 5, Dataset: 'Color_Lincoln', Description: 'This data give details of the colors of berry from different regions '},\n    {Position: 6, Dataset: 'Comp_Kea_Berry_Vs_AWRI', Description: 'This data is detailed on the wine composition such a water, ethanol, pH and etc.'},\n    {Position: 7, Dataset: 'Oenological_analysis_PFR', Description: 'Oenological analysis, rigorous quality control that guarantees that the wine is safe and of the highest quality.'},\n  ];\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.element_Data);\n  }\n\n\n  onDowload(strTable: string): void {\n    // const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    // const EXCEL_EXTENSION = '.xlsx';\n    // const fileName = strTable+\".xlsx\";\n    //const dt:any;\n    //this.http.get(this.APIUrl+'forDownloadData?strTable='+strTable).subscribe(data=> {\n    if(strTable ==\"Metadata\"){\n\n      this.Metadata(strTable);\n\n    }else if(strTable ==\"Physical_Data\"){\n\n      this.Physical_Data(strTable);\n\n    }else if(strTable ==\"AromaLincoln\"){\n      \n      this.AromaLincoln(strTable)\n\n    }else if(strTable ==\"Berry_OD\"){\n\n      this.Berry_OD(strTable);\n\n    }else if(strTable ==\"Color_Lincoln\"){\n\n      this.Color_Lincoln(strTable);\n\n    }else if(strTable ==\"Comp_Kea_Berry_Vs_AWRI\"){\n\n      this.Comp_Kea_Berry_Vs_AWRI(strTable);\n\n    }else if (strTable ==\"Oenological_analysis_PFR\") {\n\n      this.Oenological_analysis_PFR(strTable);\n    }\n  }\n\n  Metadata(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getMetadata().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n  Physical_Data(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getPhysicalData().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n  AromaLincoln(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getAromaLincoln().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n  Berry_OD(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getBerry_OD().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n  Color_Lincoln(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getColor_Lincoln().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n  Comp_Kea_Berry_Vs_AWRI(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getComp_Kea_Berry_Vs_AWRI().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n  \n  Oenological_analysis_PFR(strTable: string): void {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const fileName = strTable+\".xlsx\";\n\n    this.service.getOenological_analysis_PFR().subscribe(data=>{\n      const workSheet = XLSX.utils.json_to_sheet(data);\n      const workBook = {\n        Sheets:{\n          'Sheet1':workSheet\n        },\n          SheetNames: ['Sheet1']\n      }\n      const excelBuffer = XLSX.write(workBook,{bookType:'xlsx', type: 'array'});\n      const blobData = new Blob([excelBuffer],{type: EXCEL_TYPE});\n      this.fileSaver.save(blobData,fileName);\n    })\n  }\n\n\n}\n","<mat-drawer-container #containerChart id = \"containerChart\" class=\"container\" [hasBackdrop]=\"false\">\n\n    <mat-table matSort [dataSource] = \"dataSource\">\n        <ng-container matColumnDef=\"Position\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header>No.</mat-header-cell>\n              <mat-cell *matCellDef=\"let element\">{{element.Position}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Dataset\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header>Dataset</mat-header-cell>\n              <mat-cell *matCellDef=\"let element\">{{element.Dataset}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Description\">\n              <mat-header-cell *matHeaderCellDef  mat-sort-header>Description</mat-header-cell>\n              <mat-cell *matCellDef=\"let element\">{{element.Description}}</mat-cell>\n        </ng-container>\n        \n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns:displayedColumns;\"></mat-row>\n    \n        <ng-container matColumnDef=\"Options\">\n          <mat-header-cell *matHeaderCellDef>Download (.xlsx)</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n              <button mat-icon-button color=\"warn\" (click)=\"onDowload(row.Dataset)\">\n                  <mat-icon>cloud_download</mat-icon>\n              </button>\n        </mat-cell>\n        </ng-container>\n    </mat-table>\n    \n    </mat-drawer-container>\n    ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent {\n  \n  Dev: string = \"Sarawoot Somin\"\n  Dev_info: string = \"PhD degree: Computational Modelling and Systems Biology, Faculty of Agriculture and Life Sciences, Lincoln University, New Zealand\";\n\n  Research_team: string = \"Parul Tiwari 1,2, Piyush Bhardwaj 1,2, Sarawoot Somin 1,2, Wendy V. Parr 2 , Roland Harrison and Don Kulasiri 1,2,*\";\n  Dep1: string = \"Affiliation 1: Centre for Advanced Computational Solutions (C-fACS), Lincoln University, Christchurch 7647, New Zealand\"\n  Dep2: string = \"Affiliation 2: Department of Wine, Food and Molecular Biosciences, Lincoln University, Christchurch 7647, New Zealand\"\n\n  Cor: string = \"Prof. Don Kulasiri; email: don.kulasiri@lincoln.ac.nz\"\n\n  content1: string = \"This study develops a conceptual and mathematical framework to predict \"+\n  \".wine quality, and then validated these using a large dataset with machine learning approaches. It is \"+\n  \"worth noting that the predicted wine quality indices are in good agreement with the wine experts  \"+\n  \"perceived quality ratings We used sample data from Pinot noir wines from different regions of New Zealand to \"+\n  \"develop a mathematical model that can predict wine quality, and applied dimensional analysis with \"+\n  \"the Buckingham Pi theorem to determine the mathematical relationship among different chemical \"+\n  \"and physiochemical compounds.\";\n\n  content2: string = \"Eighteen commercial Pinot noir wines from five NZ regions were employed, the \"+\n  \"same 18 wines in each of the two experiments (Table 1). Fifteen wines were from the \"+\n  \"2016 vintage, and 3 from the 2013 vintage. Four producers had two wines each in the \"+\n  \"18-wine sample set, and each of the other 10 wines was produced by a different company. \"+\n  \"Wines were selected as representatives of the major Pinot noir producing areas of NZ. \"+\n  \"As well, they spanned a range in terms of recommended retail price (RRP), price often \"+\n  \"linked anecdotally with quality. The details of the 18 wines can be seen in Table 1, along \"+\n  \"with several viniviticultural properties (e.g., wine region and method of production) that \"+\n  \"were used as controlling factors, i.e., to ensure the representative nature of the sample of \"+\n  \"wines selected. The viniviticultural factors were not treated as independent variables in \"+\n  \"the present study for valid reasons (e.g., low and unequal numbers in some cells). The \"+\n  \"two experiments were conducted 9 months apart so that the wines in Experiment 2 had \"+\n  \"9 months more bottle age than the same wines employed in Experiment 1\";\n\n  table1: string = \"assets/img/Table1.png\";\n  table1_description: string = \"Table1. The 18 wines employed in the two experiments.\"\n\n  content21: string = \"In the conceptual framework of developing a mathematical model for quality indices \"+\n  \"we focused on essential modulators by keeping in mind the complex nature of Pinot noir \"+\n  \"wine (Figure 1). The selection of these parameters plays a vital role in making accurate predictions \"+\n  \"about an individual wine’s quality, and requires careful study and technical knowledge \"+\n  \"of the chemical quantities that exist in the wine bottle. The more abstract concepts of \"+\n  \"wine balance, harmony of components, varietal typicality and so forth, are also major \"+\n  \"drivers of a wine’s perceived quality. As well, the mouthfeel or trigeminal sensations of \"+\n  \"astringency and softness are pivotal to the perceived quality (our sensory data demonstrate \"+\n  \"this emphatically), as well as the tastes of sourness and bitterness. We have selected \"+\n  \"modulators representing fruity, herbal, floral, woody, and other flavours, such as spicy \";\n\n  fig1: string = \"assets/img/fig1.png\";\n  fig1_description: string = \"Figure 1. Flow chart for selecting essential modulators for mathematical development of the mode\"\n\n  content3: string = \"In conclusion, we can say that the mathematical framework provides a solid scientific \"+\n  \"background for model development. The use of machine learning approaches validated \"+\n  \"this model and helped to speed up the computing process. Advanced machine learning algorithms provided an effective tool for understanding the complex nature of wine datasets, \"+\n  \"and conveyed useful information related to wine quality. Based on the proposed approach, \"+\n  \"we are developing a machine learning-based web application that wine researchers and \"+\n  \"wine producers can use to forecast wine quality based on some specific features that are \"+\n  \"present in their wines, and that can be tuned for different variable amounts. \";\n}\n","<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Developer:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n        <mat-card-content>   \r\n            <mat-card-subtitle><b><h2>{{Dev}}</h2></b> {{Dev_info}} </mat-card-subtitle>\r\n            <mat-card-subtitle>{{Dep1}}</mat-card-subtitle>\r\n        </mat-card-content>       \r\n    </mat-card-header>\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>Research team:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n        <mat-card-content>\r\n            <mat-card-subtitle>{{Research_team}}</mat-card-subtitle>\r\n            <mat-card-subtitle>{{Dep1}}</mat-card-subtitle>\r\n            <mat-card-subtitle>{{Dep2}}</mat-card-subtitle>\r\n        </mat-card-content>       \r\n    </mat-card-header>\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>Correspondence:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n        <mat-card-content>\r\n            <mat-card-subtitle>{{Cor}}</mat-card-subtitle>\r\n        </mat-card-content>       \r\n    </mat-card-header>\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>Proposal:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n      <mat-card-content>{{content1}}</mat-card-content>\r\n    </mat-card-header>\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>Experiments:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n    <mat-card-content>{{content2}}</mat-card-content>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <img  class=\"map-frame\" [src] =\"table1\" style=\"width: 600px;height: 400px;\"> \r\n        <mat-card-subtitle>{{table1_description}}</mat-card-subtitle>\r\n    </mat-card-content>\r\n    <mat-card-header>\r\n        <mat-card-content>{{content21}}</mat-card-content>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <img  class=\"map-frame\" [src] =\"fig1\" style=\"width: 600px;height: 600px;\"> \r\n        <mat-card-subtitle>{{fig1_description}}</mat-card-subtitle>\r\n    </mat-card-content>\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>Conclusions:</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-header>\r\n        <mat-card-content>{{content3}}</mat-card-content>\r\n    </mat-card-header>\r\n</mat-card>\r\n\r\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ServiceService } from '../services/service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public loginValid = true;\n  public nonMember = true;\n\n  private APIUrl = environment.APIUrl;\n\n  constructor (private service: ServiceService, private http:HttpClient) {}\n\n\n  loginForm = new FormGroup({\n    EMAIL: new FormControl('',[Validators.required, Validators.email]),\n    PASSWORD: new FormControl('',[Validators.required, Validators.minLength(6), Validators.maxLength(15)])\n  });\n\n\n  dtUserPWD:any = [];\n  displayEmail = \" Admin\";\n\n  refreshScreen() {\n    if (localStorage.getItem('session') != null){\n      this.nonMember = false;\n      this.displayEmail = \"\"+localStorage.getItem('session');\n    }\n  }\n\n\n  ngOnInit() {\n    this.refreshScreen();\n  }\n\n  loginSubmited() {\n    var strEmail = this.Email.value;\n    var strPWD = this.PWD.value;\n    var formData = new FormData();\n\n    formData.append(\"email\",strEmail);\n    formData.append(\"pwd\",strPWD);\n    \n\n    this.http.post(this.APIUrl+'GetUserPWD',formData).subscribe(dt=>{\n      console.log(\"email:\"+dt);\n    //this.service.getUser().subscribe(dt=>{\n      this.dtUserPWD = dt;\n        var len = this.dtUserPWD.length;\n\n        if (len==1) {\n          this.loginValid = true;\n          this.nonMember = false;\n\n          localStorage.setItem('session', strEmail);\n          this.refreshScreen();\n          window.location.reload();\n          //this.redirectScreen();\n        }\n        else {\n          this.loginValid = false;\n          localStorage.setItem('session', \"nonMember\");\n        }\n    });\n    \n    this.http.get(this.APIUrl+'GetUserPWD').subscribe(dt=>{\n      console.log(\"email:\"+dt);\n    //this.service.getUser().subscribe(dt=>{\n      this.dtUserPWD = dt;\n        var len = this.dtUserPWD.length;\n\n        if (len==1) {\n          this.loginValid = true;\n          this.nonMember = false;\n\n          localStorage.setItem('session', strEmail);\n          this.refreshScreen();\n          window.location.reload();\n          //this.redirectScreen();\n        }\n        else {\n          this.loginValid = false;\n          localStorage.setItem('session', \"nonMember\");\n        }\n    });\n  }\n\n  logoutSubmited() {\n    this.nonMember = true;\n    localStorage.removeItem('session');\n    window.location.reload();\n    //this.refreshScreen();\n  }\n\n\n  get Email(): FormControl {\n    return this.loginForm.get('EMAIL') as FormControl;\n  }\n  get PWD(): FormControl {\n    return this.loginForm.get('PASSWORD') as FormControl;\n  }\n\n}\n","<mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup] = \"loginForm\"  (ngSubmit) = \"loginSubmited()\" *ngIf = \"nonMember\">\r\n        <h2>Admin sign in</h2>\r\n        <mat-error *ngIf=\"!loginValid\">\r\n          The username and password were not recognized\r\n        </mat-error>\r\n        <mat-form-field>\r\n          <input matInput type=\"EMAIL\" placeholder=\"EMAIL\" formControlName=\"EMAIL\" id = \"EMAIL\" \r\n          name = \"EMAIL\" required>\r\n          <mat-error>\r\n            Please provide a valid email address\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput type=\"PASSWORD\" placeholder=\"PASSWORD\" formControlName=\"PASSWORD\" id=\"PASSWORD\" \r\n          name = \"PASSWORD\"  required>\r\n          <mat-error>\r\n            Please provide a valid password\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <br>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"loginForm.invalid\" >Login</button>\r\n      </form>\r\n\r\n      <form [formGroup] = \"loginForm\" (ngSubmit) = \"logoutSubmited()\" *ngIf = \"!nonMember\">\r\n            <h4>{{displayEmail}}, signed in</h4>\r\n        <button mat-raised-button color=\"primary\">Logout</button>\r\n      </form>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, Input, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { Metadata } from 'src/app/models/metadata';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-add-metadata',\n  templateUrl: './add-metadata.component.html',\n  styleUrls: ['./add-metadata.component.css']\n})\nexport class AddMetadataComponent {\n  title = 'Adding Metadata';\n\n  constructor(private service: ServiceService, private dialogRef: MatDialogRef<AddMetadataComponent>,\n      //  @Inject(MAT_DIALOG_DATA) public data: Metadata\n      ) {}\n\n  addMetadataRequest: Metadata = {\n    ID: '',\n    Producer_Abbrev: '',\n    Producer: '',\n    Vineyard: '',\n    Vintage: '',\n    Region: '',\n    Cost: 0,\n    Uses: '',\n    Closure: '',\n    Harvest: '',\n    Yield: '',\n    Production: '',\n    Viticulture: '',\n    Quality: 0,\n    Layer_ID: '',\n    Layer_ID1: '',\n    DIV: 0,\n  };\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?:NgForm) {\n     if(form!=null)form.resetForm();\n  }\n\n  onSubmit(form: NgForm) {\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      this.service.addMetadata(this.addMetadataRequest).subscribe(data=>{\n        alert(data);\n        form.resetForm();\n      });\n    }\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n    this.service.filter('Register click');\n  }\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n\n<div>\n<mat-dialog-content>\n    <form class=\"form1\" #form=\"ngForm\" (ngSubmit) = \"onSubmit(form)\">\n        <mat-form-field>\n            <mat-label>ID</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"ID\"\n            name=\"ID\" [(ngModel)] = \"addMetadataRequest.ID\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Producer abbrev</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Producer_Abbrev\"\n            name=\"Producer_Abbrev\" [(ngModel)] = \"addMetadataRequest.Producer_Abbrev\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Producer</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Producer\"\n            name=\"Producer\" [(ngModel)] = \"addMetadataRequest.Producer\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Vineyard</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Vineyard\"\n            name=\"Vineyard\" [(ngModel)] = \"addMetadataRequest.Vineyard\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Vintage</mat-label>\n            <select matNativeControl id = \"Vintage\" name=\"Vintage\" [(ngModel)] = \"addMetadataRequest.Vintage\">\n                <option [ngValue]=\"2013\">2013</option>\n                <option [ngValue]=\"2016\">2016</option>\n                <option [ngValue]=\"2019\">2019</option>\n                <option [ngValue]=\"2025\">2025</option>\n                <option [ngValue]=\"2028\">2028</option>\n                <option [ngValue]=\"2031\">2031</option>\n            </select>\n        </mat-form-field>\n        <!-- <mat-form-field>\n            <mat-label>Vintage]</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Vintage\"\n            name=\"Vintage\" [(ngModel)] = \"addMetadataRequest.Vintage\">\n        </mat-form-field> -->\n\n        <mat-form-field>\n            <mat-label>Region</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Region\"\n            name=\"Region\" [(ngModel)] = \"addMetadataRequest.Region\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Cost</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Cost\"\n            name=\"Cost\" [(ngModel)] = \"addMetadataRequest.Cost\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Uses</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Uses\"\n            name=\"Uses\" [(ngModel)] = \"addMetadataRequest.Uses\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Closure</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Closure\"\n            name=\"Closure\" [(ngModel)] = \"addMetadataRequest.Closure\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Harvest</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Harvest\"\n            name=\"Harvest\" [(ngModel)] = \"addMetadataRequest.Harvest\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Yield</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Yield\"\n            name=\"Yield\" [(ngModel)] = \"addMetadataRequest.Yield\">\n        </mat-form-field>\n\n        <!-- <mat-form-field>\n            <mat-label>Production</mat-label>\n            <ng-container *ngFor=”let option of list1; let i = index”>\n                <input type=”radio” [value]=”option” formControlName=”fruit” />{{ option }}\n            </ng-container> -->\n        <mat-label>Production</mat-label>\n            <mat-radio-group aria-label=\"Select an option\" name=\"Production\" [(ngModel)] = \"addMetadataRequest.Production\">\n            <mat-radio-button value=\"high\">high</mat-radio-button>\n            <mat-radio-button value=\"low\">low</mat-radio-button>\n            </mat-radio-group>\n        <!-- </mat-form-field> -->\n\n        <mat-form-field>\n        <mat-label>Viticulture</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Viticulture\"\n            name=\"Viticulture\" [(ngModel)] = \"addMetadataRequest.Viticulture\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Quality</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Quality\"\n            name=\"Quality\" [(ngModel)] = \"addMetadataRequest.Quality\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Layer_ID</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Layer_ID\"\n            name=\"Layer_ID\" [(ngModel)] = \"addMetadataRequest.Layer_ID\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Layer_ID1</mat-label>\n            <input matInput  minlength=\"2\" type=\"text\" id=\"Layer_ID1\"\n            name=\"Layer_ID1\" [(ngModel)] = \"addMetadataRequest.Layer_ID1\">\n        </mat-form-field>\n\n        <!-- <mat-form-field>\n        <mat-label>DIV</mat-label>\n            <input matInput  minlength=\"2\" type=\"text\" id=\"DIV\"\n            name=\"DIV\" [(ngModel)] = \"addMetadataRequest.DIV\">\n        </mat-form-field> -->\n\n        <button mat-raised-button type=\"submit\" color=\"primary\">Save</button>\n    </form>\n</mat-dialog-content>\n</div>\n<div>\n<mat-dialog-content>\n        <button mat-raised-button class=\"close\" (click)=\"onCancel()\" color=\"warn\">Cancel</button>\n</mat-dialog-content>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n// import { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Metadata } from 'src/app/models/metadata';\nimport {NgForm} from '@angular/forms';\n// import { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-metadata',\n  templateUrl: './edit-metadata.component.html',\n  styleUrls: ['./edit-metadata.component.css']\n})\nexport class EditMetadataComponent {\n  title = 'Details of metadata';\n  // dataSource!: MatTableDataSource<any>;\n\n\n  constructor(public dialogRef: MatDialogRef<EditMetadataComponent>,\n    private route: ActivatedRoute, private service: ServiceService, @Inject(MAT_DIALOG_DATA) public dataForEdit: any){}\n  \n  MetadataDetails: Metadata = {\n      ID: '',\n      Producer_Abbrev: '',\n      Producer: '',\n      Vineyard: '',\n      Vintage: '',\n      Region: '',\n      Cost: 0,\n      Uses: '',\n      Closure: '',\n      Harvest: '',\n      Yield: '',\n      Production: '',\n      Viticulture: '',\n      Quality: 0,\n      Layer_ID: '',\n      Layer_ID1: '',\n      DIV:0\n    };\n  \n  options = [\n    {id: 2013, display: \"2013\"},\n    {id: 2016, display: \"2016\"},\n    {id: 2019, display: \"2019\"},\n    {id: 2023, display: \"2023\"},\n    {id: 2025, display: \"2025\"},\n    {id: 2028, display: \"2028\"},\n    {id: 2031, display: \"2031\"}\n  ]\n\n  public radios: any = [\n    {id: \"Low\",bool: false},\n    {id: \"High\",boo: false}\n  ];\n  //radios = [{id: \"Low\", check: true}, {id: \"High\", check: true}]\n    \n  ngOnInit(): void{\n    this.MetadataDetails = this.dataForEdit;\n    console.log(this.MetadataDetails);\n    // if(this.radios[0][0] == this.dataForEdit.Production) this.radios[0][0] = true;\n    // else this.radios[0][1] = true;\n    // console.log(this.radios);\n  }\n\n  onSubmit(form: NgForm){\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      this.service.updateMetadata(this.MetadataDetails).subscribe(data => {\n        alert(data);\n        this.dialogRef.close();\n        this.service.filter('Register click');\n        });\n    }\n  }\n  \n  onCancel(){\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n\n<div>\n<mat-dialog-content>\n    <form class=\"form1\" #form=\"ngForm\" (ngSubmit) = \"onSubmit(form)\"  autocomplete=\"off\">\n        <div>\n        <td><h1>ID:</h1></td><td><h1>{{MetadataDetails.ID}}</h1></td>\n        </div>\n            \n\n        <mat-form-field>\n            <mat-label>Producer abbrev</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Producer_Abbrev\"\n            name=\"Producer_Abbrev\" [(ngModel)] = \"MetadataDetails.Producer_Abbrev\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Producer</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Producer\"\n            name=\"Producer\" [(ngModel)] = \"MetadataDetails.Producer\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Vineyard</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Vineyard\"\n            name=\"Vineyard\" [(ngModel)] = \"MetadataDetails.Vineyard\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Vintage</mat-label>\n            <select matNativeControl id = \"Vintage\" name=\"Vintage\" [(ngModel)] = \"MetadataDetails.Vintage\">\n                <option *ngFor=\"let option of options\" [value]=\"option.id\">{{option.display}}</option>\n                <!-- <option [ngValue]=\"2016\">2016</option>\n                <option [ngValue]=\"2019\">2019</option>\n                <option [ngValue]=\"2025\">2025</option>\n                <option [ngValue]=\"2028\">2028</option>\n                <option [ngValue]=\"2031\">2031</option> -->\n            </select>\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Region</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Region\"\n            name=\"Region\" [(ngModel)] = \"MetadataDetails.Region\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Cost</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Cost\"\n            name=\"Cost\" [(ngModel)] = \"MetadataDetails.Cost\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Uses</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Uses\"\n            name=\"Uses\" [(ngModel)] = \"MetadataDetails.Uses\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Closure</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Closure\"\n            name=\"Closure\" [(ngModel)] = \"MetadataDetails.Closure\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Harvest</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Harvest\"\n            name=\"Harvest\" [(ngModel)] = \"MetadataDetails.Harvest\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Yield</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Yield\"\n            name=\"Yield\" [(ngModel)] = \"MetadataDetails.Yield\">\n        </mat-form-field>\n\n        <mat-radio-group aria-label=\"Select an option\" id=\"Production\" name=\"Production\"  [(ngModel)] = \"MetadataDetails.Production\">\n            <mat-label><b>Production</b></mat-label>\n            <mat-radio-button *ngFor=\"let radio of radios\" [value] = \"radio.id\">{{radio.id}}</mat-radio-button>\n            <!-- <mat-radio-button value=\"MetadataDetails.Production\">Low</mat-radio-button>\n            <mat-radio-button value=\"MetadataDetails.Production\">High</mat-radio-button> -->\n        </mat-radio-group>\n        <!-- </mat-form-field> -->\n\n        <mat-form-field>\n        <mat-label>Viticulture</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Viticulture\"\n            name=\"Viticulture\" [(ngModel)] = \"MetadataDetails.Viticulture\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Quality</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Quality\"\n            name=\"Quality\" [(ngModel)] = \"MetadataDetails.Quality\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Layer_ID</mat-label>\n            <input matInput minlength=\"2\" type=\"text\" id=\"Layer_ID\"\n            name=\"Layer_ID\" [(ngModel)] = \"MetadataDetails.Layer_ID\">\n        </mat-form-field>\n\n        <mat-form-field>\n        <mat-label>Layer_ID1</mat-label>\n            <input matInput  minlength=\"2\" type=\"text\" id=\"Layer_ID1\"\n            name=\"Layer_ID1\" [(ngModel)] = \"MetadataDetails.Layer_ID1\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"submit\" color=\"primary\">Save</button>\n    </form>\n</mat-dialog-content>\n</div>\n<div>\n<mat-dialog-content>\n        <button mat-raised-button class=\"close\" (click)=\"onCancel()\" color=\"warn\">Cancel</button>\n</mat-dialog-content>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.css']\n})\nexport class MetadataComponent {\n\n}\n","<app-show-metadata></app-show-metadata>\n","import {Component, ViewChild} from '@angular/core';\nimport {Metadata} from 'src/app/models/metadata';\nimport { ServiceService } from 'src/app/services/service.service';\n\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport {AddMetadataComponent} from 'src/app/metadata/add-metadata/add-metadata.component';\nimport {MatDialog,MatDialogConfig} from '@angular/material/dialog';\nimport { EditMetadataComponent } from '../edit-metadata/edit-metadata.component';\n\n\n@Component({\n  selector: 'app-show-metadata',\n  templateUrl: './show-metadata.component.html',\n  styleUrls: ['./show-metadata.component.css']\n})\n\n\nexport class ShowMetadataComponent {\n  displayedColumns: string[] = ['ID','Producer','Vineyard', 'Region', 'Uses','Harvest', 'Yield','Viticulture', 'Options'];\n  dataSource! :  MatTableDataSource<any>;\n\n  constructor(private service: ServiceService,private dialog:MatDialog) {\n   //for refresh screen after  add or edit/delete\n    this.service.listen().subscribe(data=>{\n      this.refeshList();\n    })\n  }\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngOnInit(){\n    this.refeshList();    \n  }\n  refeshList() {\n    this.service.getMetadata().subscribe(data=>{\n      this.dataSource = new MatTableDataSource(data);\n      console.log(this.dataSource);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  applyFilter(event: Event) {\n      const filterValue = (event.target as HTMLInputElement).value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = \"90%\";\n    dialogConfig.width = \"60%\";\n    this.dialog.open(AddMetadataComponent,dialogConfig);\n\n   }\n\n  onEdit(meta: Metadata){\n    //  console.log(meta.ID);\n    //  const dialogConfig = new MatDialogConfig();\n    //  dialogConfig.disableClose = true;\n    //  dialogConfig.autoFocus = true;\n    //  dialogConfig.width = \"70%\";\n    this.dialog.open(EditMetadataComponent, {\n      height: '90%',\n      width: '60%',\n      data: meta\n    });\n   }\n\n  onDelete(id: string){\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      if(confirm('Do you persist in deleting: '+id+'?'))\n      this.service.deleteMetadata(id).subscribe(data=>{\n        alert(data);\n        this.refeshList();\n      })\n    }\n    }\n  }\n","<mat-drawer-container #containerChart id = \"containerChart\" class=\"container\" [hasBackdrop]=\"false\">\n    <td>\n        <mat-form-field>\n        <mat-label>Filter Table</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\"  placeholder=\"Keyword search\">  \n        </mat-form-field>\n    </td>\n    <td>\n        <button mat-raised-button (click) = \"onAdd()\" color=\"primary\">Add</button>\n    </td>\n    \n\n\n<mat-table matSort [dataSource] = \"dataSource\">\n    <ng-container matColumnDef=\"ID\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by name\">ID</mat-header-cell>\n          <mat-cell *matCellDef=\"let element\">{{element.ID}}</mat-cell>\n    </ng-container>\n      \n    <ng-container matColumnDef=\"Producer\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Producer\">Producer</mat-header-cell>\n          <mat-cell *matCellDef=\"let element\">{{element.Producer}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Vineyard\">\n          <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Vineyard\">Vineyard</mat-header-cell>\n          <mat-cell *matCellDef=\"let element\">{{element.Vineyard}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Region\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Region\">Region</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Region}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Uses\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Uses\">Uses</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Uses}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Harvest\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Harvest\">Harvest</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Harvest}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Yield\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Yield\">Yield</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Yield}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"Viticulture\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by Viticulture\">Viticulture</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Viticulture}}</mat-cell>\n    </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns:displayedColumns;\"></mat-row>\n\n      <ng-container matColumnDef=\"Options\">\n      <mat-header-cell *matHeaderCellDef>Options</mat-header-cell>\n      <!-- <mat-cell *matCellDef=\"let row\"(click)=\"onEdit(row)\"> -->\n        <mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button color=\"primary\" (click)=\"onEdit(row)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.ID)\">\n              <mat-icon>delete_outline</mat-icon>\n          </button>\n      </mat-cell>\n      </ng-container>\n</mat-table>\n\n<mat-paginator [pageSizeOptions] = \"[10,25,100]\" aria-label=\"select page of users\"></mat-paginator>\n\n</mat-drawer-container>\n","import { Component, ViewChild} from '@angular/core';\nimport { ServiceService } from '../services/service.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormControl } from '@angular/forms';\nimport {NgForm} from '@angular/forms';\n\nimport { MLSlider } from '../models/ml';\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-ml',\n  templateUrl: './ml.component.html',\n  styleUrls: ['./ml.component.css']\n})\nexport class MlComponent {\n  displayedColumns: string[] = ['data1','data2','data3']\n  dataSource! :  MatTableDataSource<any>;\n  //dataSource: any = [];\n\n  chart1: typeof Highcharts = Highcharts;  \n  chart2: typeof Highcharts = Highcharts;  \n  chart3: typeof Highcharts = Highcharts;  \n  chart4: typeof Highcharts = Highcharts;  \n  chartOption1: any;\n  chartOption2: any;\n  chartOption3: any;\n  chartOption4: any;\n\n\n  toggle = new FormControl('toggle');\n  toggleLabel = new FormControl('Show parameters');\n  formatLabel(value: number): string {\n    return `${value}`;\n  }\n\n  constructor(private service: ServiceService) {\n      this.service.listen().subscribe(data=>{\n        this.refreshList();\n      })\n    }\n  \n  loading = true;\n\n  slider: MLSlider = {\n    Cluster_number: 23.0,\n    Cluster_weight: 144.0,\n    Shoot_number_more_5mm: 12.0,\n    Vine_canopy: 0.5,\n    Leaf_Area_per_m: 12000.0,\n    Berry_weight: 1.78,\n  };\n  \n  onChange() {\n    if(this.toggleLabel.value == 'Show parameters') {\n      this.toggleLabel.setValue('Hide parameters');\n    }\n    else{\n      this.toggleLabel.setValue('Show parameters');\n    }\n   }\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngOnInit(){\n    this.onSubmit();\n    //this.refreshList();\n  }\n\n  refreshList() {\n\n    // this.service.getAIModel().subscribe(data=> {\n    //   this.dataSource = new MatTableDataSource(data);\n    //   console.log(this.dataSource);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n    // })\n  }\n\n  // hideloader() { \n  //   this.loading= false; \n  // } \n\n  // load() {\n  //   setTimeout( () => this.loading = true, 20000 );\n  //   if (this.loading == true)\n  //     {\n  //       alert('Reload');\n  //       this.onSubmit();\n  //     }\n\n  // }\n\n  onSubmit() {\n    //console.log(this.slider);\n    // this.service.getAIModel().subscribe(data=> {\n    //   console.log(data);\n    // })\n    //this.load()\n\n    this.service.classifyAIModel(this.slider).subscribe(dt=>{\n      if (dt) {\n        this.loading = false;\n      }\n      else{\n        alert('Reload');\n      }\n      this.loading = false;\n      const data1 = dt.filter(x=> x.Yield === \"Yield per wine\");\n      const data2 = dt.filter(x=> x.Yield === \"Yield per metre\");\n      const data3 = dt.filter(x=> x.Yield === \"Yield per square metre\");\n      const data4 = dt.filter(x=> x.Yield === \"Yield per square metre\");\n\n      console.log(data1);\n      const qData1 = data1.map((item, index) => ( {\n        data: [[item.Quality,item.Value]]\n      }));\n      const qData2 = data2.map((item, index) => ( {\n        //name: [item.Yield],\n        // color: 'rgba(119, 152, 191, .5)',\n        data: [[item.Quality,item.Value]]\n      }));\n      const qData3 = data3.map((item, index) => ( {\n        //name: [item.Yield],\n        // color: 'Red',\n        data: [[item.Quality,item.Value]]\n      }));\n      const qData4 = data4.map((item, index) => ( {\n        //name: [item.Yield],\n        // color: 'Red',\n        data: [[item.Berry_weight_g,item.Value]]\n      }));\n\n      this.renderTopLeftChart(qData1);\n      this.renderTopRightChart(qData2);\n      this.renderBottomLeftChart(qData3);\n      this.renderBottomRightChart(qData4);\n    })\n  }\n\n  renderTopLeftChart(dt:any){\n    this.chartOption1 = \n    {\n       chart: { type: 'scatter'},//, zoomType: 'xy'},\n       title:{ text: 'Based on yield per wine'},\n       subtitle: { text: 'Quality/Value'},\n       accessibility: {\n          announceNewData: {\n              enabled: false\n          }\n       },\n      //  series: [\n      //   {\n      //     //name: 'Quality',\n      //     //color: 'rgba(223, 83, 83, .5)',\n      //     data: dt1\n      //   },\n      //   {\n      //     //name: 'value2',\n      //     //color: 'rgba(119, 152, 191, .5)',\n      //     data: dt2\n      //   },\n      //   {\n      //     //name: 'value1',\n      //     //color: 'Red',\n      //     data: dt3\n      //   },\n      //  ] \n        // xAxis: { categories:\n        //     [\n        //       'Yield'\n        //     ]},\n        // yAxis: { categories:\n        //     [\n        //       'Value'         \n        //     ]},\n        series:dt\n    }\n  }\n  renderTopRightChart(dt:any){\n    this.chartOption2 = \n    {\n      chart: { type: 'scatter'},//, zoomType: 'xy'},\n      title:{ text: 'based on yield per metre'},\n      subtitle: { text: 'Quality/Value'},\n      accessibility: {\n        announceNewData: {\n          enabled: false\n        }\n      },\n       series: dt\n    }\n  }\n  renderBottomLeftChart(dt:any){\n    this.chartOption3 = \n    {\n      chart: { type: 'scatter'},//, zoomType: 'xy'},\n      title:{ text: 'Based on yield per square metre'},\n      subtitle: { text: 'Quality/Value'},\n      accessibility: {\n        announceNewData: {\n          enabled: false\n       }\n       },\n       series: dt\n    }\n  }\n  renderBottomRightChart(dt:any){\n    this.chartOption4 = \n    {\n      chart: { type: 'scatter'},//, zoomType: 'xy'},\n      title:{ text: 'Based on berry weight per square metre'},\n      subtitle: { text: 'Quality/Value'},\n      accessibility: {\n        announceNewData: {\n          enabled: false\n       }\n       },\n       series: dt\n    }\n  }\n}\n","<div *ngIf=\"loading\">\n    <h1>Loading may take less than 2 minutes...</h1>\n    <div class=\"d-flex justify-content-center\"> \n      <div class=\"spinner-border\" role=\"status\"> \n          <span class=\"sr-only\" id=\"loading\"></span> \n      </div> \n    </div> \n</div>\n\n<mat-dialog-content *ngIf=\"!loading\">\n<mat-slide-toggle (click)=\"drawer.toggle()\" [formControl] = \"toggle\" (change)=\"onChange()\" value=\"false\">\n    <mat-label [formControl] = \"toggleLabel\">{{toggleLabel.value}}</mat-label>\n</mat-slide-toggle>\n\n<mat-drawer-container #containerML id = \"containerML\"  class=\"container\" [hasBackdrop]=\"false\">\n    <mat-drawer #drawer mode=\"side\" opened>\n        <form #form=\"ngForm\" (ngSubmit) = \"onSubmit()\">\n            <mat-card class=\"result-card\">\n                <mat-card-content>\n                    <div class=\"label-container\">\n                        <label>Cluster number: </label>\n                    </div>\n                    <mat-slider min=\"1.0\" max=\"52.0\" step=\"1\" discrete [displayWith]=\"formatLabel\">\n                        <input id = \"Cluster_number\" name = \"Cluster_number\" matSliderThumb \n                        value=\"23.0\" [(ngModel)]=\"slider.Cluster_number\">\n                    </mat-slider>\n                    <div class=\"label-container\">\n                        <label>Cluster weight: </label>\n                    </div>\n                    <mat-slider min=\"35.0\" max=\"253.0\" step=\"1\" discrete [displayWith]=\"formatLabel\" >\n                        <input id = \"Cluster_weight\" name = \"Cluster_weight\" matSliderThumb \n                        value=\"144.0\" [(ngModel)]=\"slider.Cluster_weight\">\n                    </mat-slider>\n                    <div class=\"label-container\">\n                        <label>Shoot number more 5mm: </label>\n                    </div>\n                    <mat-slider min=\"4.0\" max=\"30.0\" step=\"1\" discrete [displayWith]=\"formatLabel\">\n                        <input id = \"Shoot_number_more_5mm\" name = \"Shoot_number_more_5mm\" matSliderThumb \n                        value=\"12.0\" [(ngModel)]=\"slider.Shoot_number_more_5mm\">\n                    </mat-slider>\n                    <div class=\"label-container\">\n                        <label>Leaf area per metre: </label>\n                    </div>\n                    <mat-slider min=\"2800.0\" max=\"32000.0\" step=\"1\" discrete [displayWith]=\"formatLabel\">\n                        <input id = \"Leaf_Area_per_m\" name = \"Leaf_Area_per_m\" matSliderThumb \n                        value=\"12000.0\" [(ngModel)]=\"slider.Leaf_Area_per_m\">\n                    </mat-slider>\n                    <div class=\"label-container\">\n                        <label>Berry weight: </label>\n                    </div>\n                    <mat-slider min=\"1.0\" max=\"2.0\" step=\"0.001\" discrete [displayWith]=\"formatLabel\">\n                        <input id = \"Berry_weight\" name = \"Berry_weight\" matSliderThumb \n                        value=\"1.78\" [(ngModel)]=\"slider.Berry_weight\">\n                    </mat-slider>\n                </mat-card-content>\n            </mat-card>\n        <section>\n            <div class=\"center\">\n              <button color=\"primary\" mat-raised-button>Classify!</button>\n            </div>\n        </section>\n        </form>\n    </mat-drawer>\n\n    <div class=\"container\">\n        <tr>\n        <td>\n        <highcharts-chart\n                [Highcharts] = \"chart1\" \n                [options]=\"chartOption1\"\n                style=\"width: 100%; height: 400px; display: block;\">       \n        </highcharts-chart>\n        </td>\n        <td>\n        <highcharts-chart\n                [Highcharts] = \"chart2\" \n                [options]=\"chartOption2\"\n                style=\"width: 100%; height: 400px; display: block;\">       \n        </highcharts-chart>\n        </td>\n        </tr>\n        <tr>\n        <td>\n        <highcharts-chart\n                [Highcharts] = \"chart3\" \n                [options]=\"chartOption3\"\n                style=\"width: 100%; height: 400px; display: block;\">       \n        </highcharts-chart>\n        </td>\n        <td>\n        <highcharts-chart\n                [Highcharts] = \"chart4\" \n                [options]=\"chartOption4\"\n                style=\"width: 100%; height: 400px; display: block;\">       \n        </highcharts-chart>\n        </td>\n        </tr>\n        <!-- <td>\n        <mat-table matSort [dataSource] = \"dataSource\">\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                <mat-header-cell *matHeaderCellDef>data1</mat-header-cell>\n                <mat-header-cell *matHeaderCellDef>data2</mat-header-cell>\n                <mat-header-cell *matHeaderCellDef>data3</mat-header-cell>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n            </mat-header-row>\n            <ng-container matColumnDef=\"data1\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"data1\">data1</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{element.data1}}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"data2\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"data2\">data2</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{element.data2}}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"data3\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"data3\">data3</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{element.data3}}</mat-cell>\n            </ng-container>\n        </mat-table>\n        <mat-paginator [pageSizeOptions] = \"[10,25,100]\" aria-label=\"select page of users\"></mat-paginator>\n        </td> -->\n        \n    </div>\n</mat-drawer-container>\n</mat-dialog-content>","import { Component, Input, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { Physical } from 'src/app/models/physical';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-add-physical',\n  templateUrl: './add-physical.component.html',\n  styleUrls: ['./add-physical.component.css']\n})\nexport class AddPhysicalComponent {\n  title = \"Physical data\";\n\n  constructor(private service: ServiceService, private dialogRef: MatDialogRef<AddPhysicalComponent>,\n    //  @Inject(MAT_DIALOG_DATA) public data: Metadata\n    ) {}\n\n  addPhysicalRequest: Physical = {\n    ID: '',\n    TA: 0,\n    Total_Sulphur: 0,\n    Gluc_Fruc: 0,\n    Total_phenolics: 0,\n    pH: 0,\n    Free_Sulphur: 0,\n    Ethanol: 0\n  }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?:NgForm) {\n     if(form!=null)form.resetForm();\n  }\n\n  onSubmit(form: NgForm) {\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      this.service.addPhysical(this.addPhysicalRequest).subscribe(data=>{\n        alert(data);\n        form.resetForm();\n      });\n    }\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n    this.service.filter('Register click');\n  }\n\n\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n\n<div>\n<mat-dialog-content>\n    <form class=\"form1\" #form=\"ngForm\" (ngSubmit) = \"onSubmit(form)\">\n        <mat-form-field>\n            <mat-label>ID</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"ID\"\n            name=\"ID\" [(ngModel)] = \"addPhysicalRequest.ID\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>TA</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"TA\"\n            name=\"TA\" [(ngModel)] = \"addPhysicalRequest.TA\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Total_Sulphur</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Total_Sulphur\"\n            name=\"Total_Sulphur\" [(ngModel)] = \"addPhysicalRequest.Total_Sulphur\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Gluc_Fruc</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Gluc_Fruc\"\n            name=\"Gluc_Fruc\" [(ngModel)] = \"addPhysicalRequest.Gluc_Fruc\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Total_phenolics</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Total_phenolics\"\n            name=\"Total_phenolics\" [(ngModel)] = \"addPhysicalRequest.Total_phenolics\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>pH</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"pH\"\n            name=\"pH\" [(ngModel)] = \"addPhysicalRequest.pH\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Free_Sulphur</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Free_Sulphur\"\n            name=\"Free_Sulphur\" [(ngModel)] = \"addPhysicalRequest.Free_Sulphur\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Ethanol</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Ethanol\"\n            name=\"Ethanol\" [(ngModel)] = \"addPhysicalRequest.Ethanol\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"submit\" color=\"primary\">Save</button>\n    </form>\n</mat-dialog-content>\n</div>\n<div>\n<mat-dialog-content>\n        <button mat-raised-button class=\"close\" (click)=\"onCancel()\" color=\"warn\">Cancel</button>\n</mat-dialog-content>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceService } from 'src/app/services/service.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Physical } from 'src/app/models/physical';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-physical',\n  templateUrl: './edit-physical.component.html',\n  styleUrls: ['./edit-physical.component.css']\n})\nexport class EditPhysicalComponent {\n\n  title = 'Details of physical data';\n\n  constructor(public dialogRef: MatDialogRef<EditPhysicalComponent>,\n    private route: ActivatedRoute, private service: ServiceService, @Inject(MAT_DIALOG_DATA) public dataForEdit: any){}\n  \n  PhysicalDetails: Physical = {\n    ID: '',\n    TA: 0,\n    Total_Sulphur: 0,\n    Gluc_Fruc: 0,\n    Total_phenolics: 0,\n    pH: 0,\n    Free_Sulphur: 0,\n    Ethanol: 0\n  }\n\n  showscreen(): void {\n    this.PhysicalDetails = this.dataForEdit;\n  }\n    \n  ngOnInit() {\n    this.showscreen();\n  }\n\n  onSubmit(form: NgForm){\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      this.service.updatePhysical(this.PhysicalDetails).subscribe(data => {\n        alert(data);\n        this.dialogRef.close();\n        this.service.filter('Register click');\n        });\n    }\n  }\n  \n  onCancel(){\n    this.dialogRef.close();\n  }\n}\n\n","<h1 mat-dialog-title>{{title}}</h1>\n\n<div>\n<mat-dialog-content>\n    <form class=\"form1\" #form=\"ngForm\" (ngSubmit) = \"onSubmit(form)\"  autocomplete=\"off\">\n        <div>\n        <td><h1>ID:</h1></td><td><h1>{{PhysicalDetails.ID}}</h1></td>\n        </div>\n            \n        <mat-form-field>\n            <mat-label>TA</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"TA\"\n            name=\"TA\" [(ngModel)] = \"PhysicalDetails.TA\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Total_Sulphur</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Total_Sulphur\"\n            name=\"Total_Sulphur\" [(ngModel)] = \"PhysicalDetails.Total_Sulphur\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Gluc_Fruc</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Gluc_Fruc\"\n            name=\"Gluc_Fruc\" [(ngModel)] = \"PhysicalDetails.Gluc_Fruc\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Total_phenolics</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Total_phenolics\"\n            name=\"Total_phenolics\" [(ngModel)] = \"PhysicalDetails.Total_phenolics\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>pH</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"pH\"\n            name=\"pH\" [(ngModel)] = \"PhysicalDetails.pH\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Free_Sulphur</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Free_Sulphur\"\n            name=\"Free_Sulphur\" [(ngModel)] = \"PhysicalDetails.Free_Sulphur\">\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Ethanol</mat-label>\n            <input matInput required minlength=\"2\" type=\"text\" id=\"Ethanol\"\n            name=\"Ethanol\" [(ngModel)] = \"PhysicalDetails.Ethanol\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"submit\" color=\"primary\">Save</button>\n    </form>\n</mat-dialog-content>\n</div>\n<div>\n<mat-dialog-content>\n        <button mat-raised-button class=\"close\" (click)=\"onCancel()\" color=\"warn\">Cancel</button>\n</mat-dialog-content>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-physical',\n  templateUrl: './physical.component.html',\n  styleUrls: ['./physical.component.css']\n})\nexport class PhysicalComponent {\n\n}\n","<app-show-physical></app-show-physical>","import { Component, ViewChild} from '@angular/core';\nimport { Physical } from 'src/app/models/physical';\nimport { ServiceService } from 'src/app/services/service.service';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AddPhysicalComponent } from '../add-physical/add-physical.component';\nimport {MatDialog,MatDialogConfig} from '@angular/material/dialog';\nimport { EditPhysicalComponent } from '../edit-physical/edit-physical.component';\n\n@Component({\n  selector: 'app-show-physical',\n  templateUrl: './show-physical.component.html',\n  styleUrls: ['./show-physical.component.css']\n})\nexport class ShowPhysicalComponent\n{\n\n  displayedColumns: string [] = ['ID','TA','Total_Sulphur','Gluc_Fruc','Total_phenolics','pH','Free_Sulphur','Ethanol', 'Options'];\n  dataSource! :  MatTableDataSource<any>;\n\n  constructor(private service: ServiceService, \n  private dialog:MatDialog) {\n    this.service.listen().subscribe(data=>{\n      this.refreshList();\n    })\n  }\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngOnInit(){\n    console.log(localStorage.getItem('session'));\n    this.refreshList();    \n  }\n  refreshList() {\n    this.service.getPhysicalData().subscribe(data=>{\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  applyFilter(event: Event) {\n      const filterValue = (event.target as HTMLInputElement).value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = \"90%\";\n    dialogConfig.width = \"60%\";\n    this.dialog.open(AddPhysicalComponent,dialogConfig);\n   }\n\n  onEdit(physical: Physical){\n    this.dialog.open(EditPhysicalComponent, {\n      height: '90%',\n      width: '60%',\n      data: physical\n    });\n   }\n\n  onDelete(id: string){\n\n    if (localStorage.getItem('session') == null || localStorage.getItem('session') == \"nonMember\"){\n      alert('Only admins and superusers are allowed.');\n    }else {\n      if(confirm('Do you persist in deleting: '+id+'?'))\n      this.service.deletePhysical(id).subscribe(data=>{\n        alert(data);\n        this.refreshList();\n      })\n    }\n   }\n\n}\n","<mat-drawer-container #containerChart id = \"containerChart\" class=\"container\" [hasBackdrop]=\"false\">\n    <td>\n        <mat-form-field>\n        <mat-label>Filter table</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\"  placeholder=\"Keyword search\">  \n        </mat-form-field>\n    </td>\n    <td>\n            <button mat-raised-button (click) = \"onAdd()\" color=\"primary\">Add</button>\n    </td>\n    \n\n\n  <mat-table matSort [dataSource] = \"dataSource\">\n    <ng-container matColumnDef=\"ID\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by name\">ID</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.ID}}</mat-cell>\n  </ng-container>\n    \n  <ng-container matColumnDef=\"TA\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by TA\">TA</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.TA}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"Total_Sulphur\">\n        <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">Total_Sulphur</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.Total_Sulphur}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"Gluc_Fruc\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">Gluc_Fruc</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Gluc_Fruc}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"Total_phenolics\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">Total_phenolics</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Total_phenolics}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"pH\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">pH</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.pH}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"Free_Sulphur\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">Free_Sulphur</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Free_Sulphur}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"Ethanol\">\n      <mat-header-cell *matHeaderCellDef  mat-sort-header sortActionDescription=\"Sort by number\">Ethanol</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Ethanol}}</mat-cell>\n  </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns:displayedColumns;\"></mat-row>\n\n    <ng-container matColumnDef=\"Options\">\n    <mat-header-cell *matHeaderCellDef>Options</mat-header-cell>\n    <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button color=\"primary\" (click)=\"onEdit(row)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.ID)\">\n            <mat-icon>delete_outline</mat-icon>\n        </button>\n    </mat-cell>\n    </ng-container>\n    </mat-table>\n\n    <mat-paginator [pageSizeOptions] = \"[10,25,100]\" aria-label=\"select page of users\"></mat-paginator>\n\n</mat-drawer-container>\n\n","import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Metadata } from '../models/metadata';\nimport { MetadataGraph} from '../models/metadata';\nimport { MetadataGraphColor } from '../models/metadata';\nimport { Physical } from '../models/physical';\nimport { AromaLincoln } from '../models/download';\nimport { Berry_OD } from '../models/download';\nimport { Color_Lincoln } from '../models/download';\nimport { Comp_Kea_Berry_Vs_AWRI } from '../models/download';\nimport { Oenological_analysis_PFR } from '../models/download';\nimport { User } from '../models/user';\nimport { ML } from '../models/ml';\nimport { MLSlider } from '../models/ml';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n  //production = true;\n  //readonly APIUrl = \"http://localhost:5277/api/Pinot/\";\n  //readonly APIUrl = \"https://pinotnz.azurewebsites.net/api/Pinot/\";\n\n  private APIUrl = environment.APIUrl;\n  private APIUrlFlask = environment.APIUrlFlask;\n\n  constructor(private http:HttpClient) { }\n\n\n\n //get ML model result\n  getAIModel(): Observable<ML[]> {\n    return this.http.get<ML[]>(this.APIUrlFlask+\"getModel\");\n  }\n  // getAIModel(){\n  //   return this.http.get(this.APIUrlFlask+\"getModel\");\n  // }\n  classifyAIModel(classifyParameter:MLSlider): Observable<any[]> {\n    return this.http.post<any[]>(this.APIUrlFlask+\"ModelClassify\", classifyParameter);\n  }\n    \n  //#region for test\n  getUser():  Observable<User[]> {\n    const headers= new HttpHeaders().set('content-type', 'application/json')\n    //.set('Access-Control-Allow-Credentials','true')\n    .set('Access-Control-Allow-Origin', '*')\n    .set('Access-Control-Allow-Headers','X-Requested-With, Content-Type, Accept')\n    .set('Access-Control-Allow-Methods','POST, GET, OPTIONS, PUT, DELETE');\n    \n\n    return this.http.get<User[]>(this.APIUrl+'GetUserPWD', {headers: headers, withCredentials: true});\n  }\n\n  //#region for Metadata\n  getMetadata(): Observable<Metadata[]> {\n    return this.http.get<Metadata[]>(this.APIUrl+'GetMetadata');\n  }\n\n  addMetadata(addMetadataRequest:Metadata): Observable<Metadata> {\n    return this.http.post<Metadata>(this.APIUrl+'AddMetadata', addMetadataRequest);\n  }\n\n  updateMetadata(updateMetadataRequest: Metadata): Observable<Metadata>{\n    return this.http.put<Metadata>(this.APIUrl+'UpdateMetadata', updateMetadataRequest);\n  }\n\n  deleteMetadata(deletedID: string): Observable<Metadata>{\n    return this.http.delete<Metadata>(this.APIUrl+'DeleteMetadata?condition='+deletedID);\n  }\n\n\n\n  getForGraph(cd: string) {\n    return this.http.get<MetadataGraph[]>(this.APIUrl+'GetMetadata_graph?condition='+cd);\n  }\n\n  getColorList(cd: string) {\n    return this.http.get<MetadataGraphColor[]>(this.APIUrl+'GetMetadata_graphColor?condition='+cd);\n  }\n  \n  gerMetadataBProduction(cd: string) {\n    return this.http.get<Metadata[]>(this.APIUrl+'GetMetadata_production?condition='+cd);\n  }\n//#endregion\n\n//#region for Physical data\n\n  getPhysicalData(): Observable<Physical[]> {\n    return this.http.get<Physical[]>(this.APIUrl+'GetPhysicaldata');\n  }\n\n  addPhysical(addPhysicalRequest:Physical): Observable<Physical> {\n    return this.http.post<Physical>(this.APIUrl+'AddPhysical', addPhysicalRequest);\n  }\n\n  updatePhysical(updatePhysicalRequest: Physical): Observable<Physical>{\n    return this.http.put<Physical>(this.APIUrl+'UpdatePhysical', updatePhysicalRequest);\n  }\n\n  deletePhysical(deletedID: string): Observable<Metadata>{\n    return this.http.delete<Metadata>(this.APIUrl+'DeletePhysical?condition='+deletedID);\n  }\n\n//#endregion\n\n\n//#region for downloading\n  //Matadata get from the metadata and physical methods, as defined\n\n  getAromaLincoln(): Observable<AromaLincoln[]> {\n    return this.http.get<AromaLincoln[]>(this.APIUrl+'GetAromaLincoln');\n  }\n\n  getBerry_OD(): Observable<Berry_OD[]> {\n    return this.http.get<Berry_OD[]>(this.APIUrl+'GetBerry_OD');\n  }\n\n  getColor_Lincoln(): Observable<Color_Lincoln[]> {\n    return this.http.get<Color_Lincoln[]>(this.APIUrl+'GetColor_Lincoln');\n  }\n\n  getComp_Kea_Berry_Vs_AWRI(): Observable<Comp_Kea_Berry_Vs_AWRI[]> {\n    return this.http.get<Comp_Kea_Berry_Vs_AWRI[]>(this.APIUrl+'GetComp_Kea_Berry_Vs_AWRI');\n  }\n\n  getOenological_analysis_PFR(): Observable<Oenological_analysis_PFR[]> {\n    return this.http.get<Oenological_analysis_PFR[]>(this.APIUrl+'GetOenological_analysis_PFR');\n  }\n//#endregion\n\n//#region action when closing button\n  private _listeners = new Subject<any>();\n\n  listen(): Observable<any> {\n    return this._listeners.asObservable();\n  }\n\n  filter(filterby: string) {\n    this._listeners.next(filterby);\n  }\n//#endregion\n\n}\n","export const environment = {\n    production: false,\n    APIUrl: \"http://localhost:3000/api/\",\n    APIUrlFlask: \"http://127.0.0.1:5000/\"\n    //APIUrl: \"http://localhost:5277/api/Pinot/\"\n};","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","DashboardComponent","ArcGisComponent","DatasetComponent","LoginComponent","InfoComponent","MlComponent","routes","path","component","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","computed","signal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","label","ɵɵtemplate","AppComponent_a_17_span_4_Template","ɵɵproperty","route","_r2","isActive","ɵɵpropertyInterpolate","icon","ctx_r0","collapsed","AppComponent","constructor","title","grape","signedIn","User","loading","menuItems","sidenavWidth","profilePicSize","ngOnInit","localStorage","getItem","substring","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_button_click_1_listener","set","ɵɵelement","AppComponent_a_17_Template","ɵɵclassProp","ɵɵstyleProp","ɵɵsanitizeUrl","FormsModule","BrowserModule","HttpClientModule","BrowserAnimationsModule","ReactiveFormsModule","MatCardModule","MatRadioModule","MatSidenavModule","MatFormFieldModule","MatSelectModule","MatTableModule","MatSortModule","MatPaginatorModule","MatDialogModule","MatToolbarModule","MatIconModule","MatListModule","MatSlideToggleModule","MatButtonModule","MatInputModule","MatTabsModule","MatMenuModule","MatTooltipModule","MatSliderModule","MatProgressSpinnerModule","MetadataComponent","HighchartsChartModule","FlexLayoutModule","AddMetadataComponent","ShowMetadataComponent","EditMetadataComponent","PhysicalComponent","AddPhysicalComponent","EditPhysicalComponent","ShowPhysicalComponent","DownloadComponent","ShowArcGisComponent","AppModule","bootstrap","declarations","FormControl","MatTableDataSource","ArcGisComponent_mat_card_18_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r4","producer_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","onDetail","Producer","Vineyard","ɵɵtextInterpolate2","Region","Layer_ID1","service","dialog","APIkey","toggle","toggleLabel","selectedGIS","Producers","onChange","value","setValue","onChangeGIS","region","genMap","console","log","str","getMetadata","subscribe","data","dataSource","gerMetadataBProduction","producer","vinyard","p","open","height","width","ɵɵdirectiveInject","ServiceService","i2","MatDialog","ArcGisComponent_Template","ArcGisComponent_Template_mat_slide_toggle_click_0_listener","_r5","_r0","ɵɵreference","ArcGisComponent_Template_mat_slide_toggle_change_0_listener","ArcGisComponent_Template_mat_select_selectionChange_10_listener","ArcGisComponent_mat_card_18_Template","MAT_DIALOG_DATA","dialogRef","dataForView","MetadataDetails","ID","Producer_Abbrev","Vintage","Cost","Uses","Closure","Harvest","Yield","Production","Viticulture","Quality","Layer_ID","DIV","MatDialogRef","ShowArcGisComponent_Template","ɵɵtextInterpolate1","Highcharts","producer_r3","qualitychart","costChart","colorchart","QPC_chart","producers","selectedQ","selectedC","selecteP","onChangeQuality","PD","getForGraph","dt","qData","map","item","index","name","QualityChart","retrieveData","onChangeCost","CD","cData","CostChart","onChangeColor","Pro","retrieveDataColor","retrieveProducerList","sh","qpcData","QPCChart","getColorList","colorData","Yellow","Red","Blue","colors","ColorChart","quality_chartOptions","chart","type","text","accessibility","announceNewData","enabled","xAxis","categories","series","t","cost_chartOptions","color_chartOptions","subtitle","qpc_chartOptions","DashboardComponent_Template","DashboardComponent_Template_mat_slide_toggle_click_0_listener","_r1","DashboardComponent_Template_mat_slide_toggle_change_0_listener","DashboardComponent_Template_mat_select_selectionChange_11_listener","DashboardComponent_Template_mat_select_selectionChange_26_listener","DashboardComponent_Template_mat_select_selectionChange_41_listener","DashboardComponent_mat_option_42_Template","DatasetComponent_Template","XLSX","element_r11","Position","element_r12","Dataset","element_r13","Description","DownloadComponent_mat_cell_16_Template_button_click_1_listener","_r17","row_r15","ctx_r16","onDowload","fileSaver","displayedColumns","element_Data","strTable","Metadata","Physical_Data","AromaLincoln","Berry_OD","Color_Lincoln","Comp_Kea_Berry_Vs_AWRI","Oenological_analysis_PFR","EXCEL_TYPE","EXCEL_EXTENSION","fileName","workSheet","utils","json_to_sheet","workBook","Sheets","SheetNames","excelBuffer","write","bookType","blobData","Blob","save","getPhysicalData","getAromaLincoln","getBerry_OD","getColor_Lincoln","getComp_Kea_Berry_Vs_AWRI","getOenological_analysis_PFR","FileSaverService","DownloadComponent_Template","ɵɵelementContainerStart","DownloadComponent_mat_header_cell_4_Template","DownloadComponent_mat_cell_5_Template","ɵɵelementContainerEnd","DownloadComponent_mat_header_cell_7_Template","DownloadComponent_mat_cell_8_Template","DownloadComponent_mat_header_cell_10_Template","DownloadComponent_mat_cell_11_Template","DownloadComponent_mat_header_row_12_Template","DownloadComponent_mat_row_13_Template","DownloadComponent_mat_header_cell_15_Template","DownloadComponent_mat_cell_16_Template","Dev","Dev_info","Research_team","Dep1","Dep2","Cor","content1","content2","table1","table1_description","content21","fig1","fig1_description","content3","InfoComponent_Template","FormGroup","Validators","environment","LoginComponent_form_2_Template_form_ngSubmit_0_listener","loginSubmited","LoginComponent_form_2_mat_error_3_Template","loginForm","loginValid","invalid","LoginComponent_form_3_Template_form_ngSubmit_0_listener","_r6","ctx_r5","logoutSubmited","ctx_r1","displayEmail","http","nonMember","APIUrl","EMAIL","required","email","PASSWORD","minLength","maxLength","dtUserPWD","refreshScreen","strEmail","Email","strPWD","PWD","formData","FormData","append","post","len","length","setItem","window","location","reload","get","removeItem","HttpClient","LoginComponent_Template","LoginComponent_form_2_Template","LoginComponent_form_3_Template","addMetadataRequest","resetForm","form","onSubmit","alert","addMetadata","onCancel","close","filter","AddMetadataComponent_Template","AddMetadataComponent_Template_form_ngSubmit_4_listener","AddMetadataComponent_Template_input_ngModelChange_9_listener","$event","AddMetadataComponent_Template_input_ngModelChange_13_listener","AddMetadataComponent_Template_input_ngModelChange_17_listener","AddMetadataComponent_Template_input_ngModelChange_21_listener","AddMetadataComponent_Template_select_ngModelChange_25_listener","AddMetadataComponent_Template_input_ngModelChange_41_listener","AddMetadataComponent_Template_input_ngModelChange_45_listener","AddMetadataComponent_Template_input_ngModelChange_49_listener","AddMetadataComponent_Template_input_ngModelChange_53_listener","AddMetadataComponent_Template_input_ngModelChange_57_listener","AddMetadataComponent_Template_input_ngModelChange_61_listener","AddMetadataComponent_Template_mat_radio_group_ngModelChange_64_listener","AddMetadataComponent_Template_input_ngModelChange_72_listener","AddMetadataComponent_Template_input_ngModelChange_76_listener","AddMetadataComponent_Template_input_ngModelChange_80_listener","AddMetadataComponent_Template_input_ngModelChange_84_listener","AddMetadataComponent_Template_button_click_89_listener","option_r3","id","display","radio_r4","dataForEdit","options","radios","bool","boo","updateMetadata","ActivatedRoute","i3","EditMetadataComponent_Template","EditMetadataComponent_Template_form_ngSubmit_4_listener","EditMetadataComponent_Template_input_ngModelChange_16_listener","EditMetadataComponent_Template_input_ngModelChange_20_listener","EditMetadataComponent_Template_input_ngModelChange_24_listener","EditMetadataComponent_Template_select_ngModelChange_28_listener","EditMetadataComponent_option_29_Template","EditMetadataComponent_Template_input_ngModelChange_33_listener","EditMetadataComponent_Template_input_ngModelChange_37_listener","EditMetadataComponent_Template_input_ngModelChange_41_listener","EditMetadataComponent_Template_input_ngModelChange_45_listener","EditMetadataComponent_Template_input_ngModelChange_49_listener","EditMetadataComponent_Template_input_ngModelChange_53_listener","EditMetadataComponent_Template_mat_radio_group_ngModelChange_54_listener","EditMetadataComponent_mat_radio_button_58_Template","EditMetadataComponent_Template_input_ngModelChange_62_listener","EditMetadataComponent_Template_input_ngModelChange_66_listener","EditMetadataComponent_Template_input_ngModelChange_70_listener","EditMetadataComponent_Template_input_ngModelChange_74_listener","EditMetadataComponent_Template_button_click_79_listener","MetadataComponent_Template","MatSort","MatPaginator","MatDialogConfig","element_r21","element_r22","element_r23","element_r24","element_r25","element_r26","element_r27","element_r28","ShowMetadataComponent_mat_cell_39_Template_button_click_1_listener","_r32","row_r30","ctx_r31","onEdit","ShowMetadataComponent_mat_cell_39_Template_button_click_4_listener","ctx_r33","onDelete","listen","refeshList","paginator","sort","applyFilter","event","filterValue","target","trim","toLowerCase","onAdd","dialogConfig","disableClose","autoFocus","meta","confirm","deleteMetadata","viewQuery","ShowMetadataComponent_Query","ShowMetadataComponent_Template_input_keyup_6_listener","ShowMetadataComponent_Template_button_click_8_listener","ShowMetadataComponent_mat_header_cell_12_Template","ShowMetadataComponent_mat_cell_13_Template","ShowMetadataComponent_mat_header_cell_15_Template","ShowMetadataComponent_mat_cell_16_Template","ShowMetadataComponent_mat_header_cell_18_Template","ShowMetadataComponent_mat_cell_19_Template","ShowMetadataComponent_mat_header_cell_21_Template","ShowMetadataComponent_mat_cell_22_Template","ShowMetadataComponent_mat_header_cell_24_Template","ShowMetadataComponent_mat_cell_25_Template","ShowMetadataComponent_mat_header_cell_27_Template","ShowMetadataComponent_mat_cell_28_Template","ShowMetadataComponent_mat_header_cell_30_Template","ShowMetadataComponent_mat_cell_31_Template","ShowMetadataComponent_mat_header_cell_33_Template","ShowMetadataComponent_mat_cell_34_Template","ShowMetadataComponent_mat_header_row_35_Template","ShowMetadataComponent_mat_row_36_Template","ShowMetadataComponent_mat_header_cell_38_Template","ShowMetadataComponent_mat_cell_39_Template","ɵɵpureFunction0","_c0","MlComponent_mat_dialog_content_1_Template_mat_slide_toggle_click_1_listener","_r3","MlComponent_mat_dialog_content_1_Template_mat_slide_toggle_change_1_listener","ctx_r7","MlComponent_mat_dialog_content_1_Template_form_ngSubmit_8_listener","ctx_r8","MlComponent_mat_dialog_content_1_Template_input_ngModelChange_16_listener","ctx_r9","slider","Cluster_number","MlComponent_mat_dialog_content_1_Template_input_ngModelChange_21_listener","ctx_r10","Cluster_weight","MlComponent_mat_dialog_content_1_Template_input_ngModelChange_26_listener","ctx_r11","Shoot_number_more_5mm","MlComponent_mat_dialog_content_1_Template_input_ngModelChange_31_listener","ctx_r12","Leaf_Area_per_m","MlComponent_mat_dialog_content_1_Template_input_ngModelChange_36_listener","ctx_r13","Berry_weight","formatLabel","chart1","chartOption1","chart2","chartOption2","chart3","chartOption3","chart4","chartOption4","Vine_canopy","refreshList","classifyAIModel","data1","x","data2","data3","data4","qData1","Value","qData2","qData3","qData4","Berry_weight_g","renderTopLeftChart","renderTopRightChart","renderBottomLeftChart","renderBottomRightChart","MlComponent_Query","MlComponent_div_0_Template","MlComponent_mat_dialog_content_1_Template","addPhysicalRequest","TA","Total_Sulphur","Gluc_Fruc","Total_phenolics","pH","Free_Sulphur","Ethanol","addPhysical","AddPhysicalComponent_Template","AddPhysicalComponent_Template_form_ngSubmit_4_listener","AddPhysicalComponent_Template_input_ngModelChange_9_listener","AddPhysicalComponent_Template_input_ngModelChange_13_listener","AddPhysicalComponent_Template_input_ngModelChange_17_listener","AddPhysicalComponent_Template_input_ngModelChange_21_listener","AddPhysicalComponent_Template_input_ngModelChange_25_listener","AddPhysicalComponent_Template_input_ngModelChange_29_listener","AddPhysicalComponent_Template_input_ngModelChange_33_listener","AddPhysicalComponent_Template_input_ngModelChange_37_listener","AddPhysicalComponent_Template_button_click_42_listener","PhysicalDetails","showscreen","updatePhysical","EditPhysicalComponent_Template","EditPhysicalComponent_Template_form_ngSubmit_4_listener","EditPhysicalComponent_Template_input_ngModelChange_16_listener","EditPhysicalComponent_Template_input_ngModelChange_20_listener","EditPhysicalComponent_Template_input_ngModelChange_24_listener","EditPhysicalComponent_Template_input_ngModelChange_28_listener","EditPhysicalComponent_Template_input_ngModelChange_32_listener","EditPhysicalComponent_Template_input_ngModelChange_36_listener","EditPhysicalComponent_Template_input_ngModelChange_40_listener","EditPhysicalComponent_Template_button_click_45_listener","PhysicalComponent_Template","ShowPhysicalComponent_mat_cell_39_Template_button_click_1_listener","ShowPhysicalComponent_mat_cell_39_Template_button_click_4_listener","physical","deletePhysical","ShowPhysicalComponent_Query","ShowPhysicalComponent_Template_input_keyup_6_listener","ShowPhysicalComponent_Template_button_click_8_listener","ShowPhysicalComponent_mat_header_cell_12_Template","ShowPhysicalComponent_mat_cell_13_Template","ShowPhysicalComponent_mat_header_cell_15_Template","ShowPhysicalComponent_mat_cell_16_Template","ShowPhysicalComponent_mat_header_cell_18_Template","ShowPhysicalComponent_mat_cell_19_Template","ShowPhysicalComponent_mat_header_cell_21_Template","ShowPhysicalComponent_mat_cell_22_Template","ShowPhysicalComponent_mat_header_cell_24_Template","ShowPhysicalComponent_mat_cell_25_Template","ShowPhysicalComponent_mat_header_cell_27_Template","ShowPhysicalComponent_mat_cell_28_Template","ShowPhysicalComponent_mat_header_cell_30_Template","ShowPhysicalComponent_mat_cell_31_Template","ShowPhysicalComponent_mat_header_cell_33_Template","ShowPhysicalComponent_mat_cell_34_Template","ShowPhysicalComponent_mat_header_row_35_Template","ShowPhysicalComponent_mat_row_36_Template","ShowPhysicalComponent_mat_header_cell_38_Template","ShowPhysicalComponent_mat_cell_39_Template","HttpHeaders","Subject","APIUrlFlask","_listeners","getAIModel","classifyParameter","getUser","headers","withCredentials","updateMetadataRequest","put","deletedID","delete","cd","updatePhysicalRequest","asObservable","filterby","next","ɵɵinject","factory","ɵfac","providedIn","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}